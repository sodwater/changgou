spring:
  #对所有微服务跨域请求进行处理
  cloud:
    gateway:
      globalcors:
        corsConfigurations:
          '[/**]': # 匹配所有请求
            allowedOrigins: "*" #跨域处理 允许所有的域
            allowedMethods: # 支持的方法
              - GET
              - POST
              - PUT
              - DELETE
      routes:
        #id 唯一标识符
        - id: changgou_goods_route
          #指定要路由的服务
          #uri: http://localhost:18081
          #LoadBalancerClient 路由过滤器(客户端负载均衡)
          #负载均衡集群的微服务
          uri: lb://goods
          predicates:
            # 路由断言，路由规则配置
            # 用户请求的域名规则配置，所有cloud.itheima.com的请求都将被路由到http://localhost:18081
            # 要想让cloud.itheima.com访问本地计算机，要配置C:\Windows\System32\drivers\etc\hosts文件
            #- Host=cloud.itheima.com**
            # 所有以/brand开始的请求，都将路由到http://localhost:18081微服务
            #- Path=/brand/**
            # 希望所有api/brand的请求，都被路由到http://localhost:18081微服务
            # 希望该路由微服务网关自动加上/api前缀，每次请求真实微服务网关时，需要使用微服务网关将/api去掉
            - Path=/api/goods/**
          filters:
            #将请求路径中的第一个路径去掉，请求路径以 / 区分
            - StripPrefix=1
            #用户请求/**自动添加前缀变成/beand/**，并将该请求路由到http://localhost:18081微服务
            #- PrefixPath=/brand
            #局部限流过滤器
            - name: RequestRateLimiter #请求数限流 名字不能随便写 ，使用默认的facatory,局部限流过滤器
              args:
                #用户唯一识别标识符  ipKeyResolver：容器名@Bean
                key-resolver: "#{@ipKeyResolver}"
                #每秒允许一个请求
                redis-rate-limiter.replenishRate: 10
                #允许并发4个请求
                redis-rate-limiter.burstCapacity: 4
        #用户微服务
        - id: changgou_user_route
          uri: lb://user
          predicates:
            - Path=/api/user/**,/api/address/**,/api/areas/**,/api/cities/**,/api/provinces/**
          filters:
            - StripPrefix=1
        #订单微服务
        - id: changgou_order_route
          uri: lb://order
          predicates:
            - Path=/api/cart/**,/api/categoryReport/**,/api/orderConfig/**,/api/order/**,/api/orderItem/**,/api/orderLog/**,/api/preferential/**,/api/returnCause/**,/api/returnOrder/**,/api/returnOrderItem/**
          filters:
            - StripPrefix=1

  application:
    name: gateway-web
  #Redis配置
  redis:
    host: 192.168.211.132
    port: 6379

server:
  port: 8001
eureka:
  client:
    service-url:
      defaultZone: http://127.0.0.1:7001/eureka
  instance:
    prefer-ip-address: true
management:
  endpoint:
    gateway:
      enabled: true
    web:
      exposure:
        include: true
